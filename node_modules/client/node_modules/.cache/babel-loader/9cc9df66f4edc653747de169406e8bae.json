{"ast":null,"code":"import { createSelector, createSlice } from \"@reduxjs/toolkit\"; // import createSelector from 'reselect';\n\nlet lastId = 0;\nconst slice = createSlice({\n  name: 'bugs',\n  initialState: [],\n  reducers: {\n    bugAdded: (bugs, action) => {\n      bugs.push({\n        id: lastId++,\n        description: action.payload.description,\n        resolved: false\n      });\n    },\n    bugResolved: (bugs, action) => {\n      const index = bugs.findIndex(bug => bug.id == action.payload.id);\n      bugs[index].resolved = true;\n    }\n  }\n});\nexport const {\n  bugAdded,\n  bugResolved\n} = slice.actions;\nexport const bugsReducer = slice.reducer;\nexport const getUnresolvedBugs = createSelector(state => state.entities.bugs, bugs => bugs.filter(bug => !bug.resolved));","map":{"version":3,"sources":["/home/adesbarat000/redux-test/client/src/store/bugs.js"],"names":["createSelector","createSlice","lastId","slice","name","initialState","reducers","bugAdded","bugs","action","push","id","description","payload","resolved","bugResolved","index","findIndex","bug","actions","bugsReducer","reducer","getUnresolvedBugs","state","entities","filter"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C,C,CACA;;AAEA,IAAIC,MAAM,GAAG,CAAb;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACtBG,EAAAA,IAAI,EAAE,MADgB;AAEtBC,EAAAA,YAAY,EAAE,EAFQ;AAGtBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxBD,MAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,QAAAA,EAAE,EAAET,MAAM,EADJ;AAENU,QAAAA,WAAW,EAAEH,MAAM,CAACI,OAAP,CAAeD,WAFtB;AAGNE,QAAAA,QAAQ,EAAE;AAHJ,OAAV;AAKH,KAPK;AAQNC,IAAAA,WAAW,EAAE,CAACP,IAAD,EAAOC,MAAP,KAAkB;AAC3B,YAAMO,KAAK,GAAGR,IAAI,CAACS,SAAL,CAAeC,GAAG,IAAIA,GAAG,CAACP,EAAJ,IAAUF,MAAM,CAACI,OAAP,CAAeF,EAA/C,CAAd;AACAH,MAAAA,IAAI,CAACQ,KAAD,CAAJ,CAAYF,QAAZ,GAAuB,IAAvB;AACH;AAXK;AAHY,CAAD,CAAzB;AAkBA,OAAO,MAAM;AAACP,EAAAA,QAAD;AAAWQ,EAAAA;AAAX,IAA0BZ,KAAK,CAACgB,OAAtC;AACP,OAAO,MAAMC,WAAW,GAAGjB,KAAK,CAACkB,OAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAGtB,cAAc,CAC3CuB,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAehB,IADmB,EAE3CA,IAAI,IAAIA,IAAI,CAACiB,MAAL,CAAYP,GAAG,IAAI,CAACA,GAAG,CAACJ,QAAxB,CAFmC,CAAxC","sourcesContent":["import { createSelector, createSlice } from \"@reduxjs/toolkit\";\n// import createSelector from 'reselect';\n\nlet lastId = 0;\n\nconst slice = createSlice({\n    name: 'bugs',\n    initialState: [],\n    reducers: {\n        bugAdded: (bugs, action) => {\n            bugs.push({\n                id: lastId ++,\n                description: action.payload.description,\n                resolved: false\n            })\n        },\n        bugResolved: (bugs, action) => {\n            const index = bugs.findIndex(bug => bug.id == action.payload.id);\n            bugs[index].resolved = true;\n        }\n    }\n})\n\nexport const {bugAdded, bugResolved} = slice.actions;\nexport const bugsReducer = slice.reducer;\nexport const getUnresolvedBugs = createSelector( \n    state => state.entities.bugs,\n    bugs => bugs.filter(bug => !bug.resolved)\n)"]},"metadata":{},"sourceType":"module"}