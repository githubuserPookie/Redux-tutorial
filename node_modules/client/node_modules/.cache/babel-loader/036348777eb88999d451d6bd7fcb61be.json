{"ast":null,"code":"import axios from 'axios';\nimport * as actions from \"../api\";\nimport { bugRequested } from '../bugs';\n\nconst api = _ref => {\n  let {\n    dispatch\n  } = _ref;\n  return next => async action => {\n    if (action.type !== actions.apiCallBegan.type) {\n      return next(action);\n    }\n\n    next(action);\n    const {\n      url,\n      method,\n      onSuccess,\n      onError,\n      data,\n      onStart\n    } = action.payload;\n    onStart && dispatch(bugRequested());\n\n    try {\n      const response = await axios.request({\n        baseURL: 'http://localhost:5000/api',\n        url,\n        method,\n        data\n      });\n      dispatch(actions.apiCallSuccess(response.data));\n      onSuccess && dispatch({\n        type: onSuccess,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch(actions.apiCallFailed(error));\n      onError && dispatch({\n        type: actions.apiCallFailed,\n        payload: error\n      });\n    }\n  };\n};\n\nexport default api;","map":{"version":3,"sources":["/home/adesbarat000/redux-test/client/src/store/middlwear/api.js"],"names":["axios","actions","bugRequested","api","dispatch","next","action","type","apiCallBegan","url","method","onSuccess","onError","data","onStart","payload","response","request","baseURL","apiCallSuccess","error","apiCallFailed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,QAAzB;AACA,SAASC,YAAT,QAA6B,SAA7B;;AAEA,MAAMC,GAAG,GAAG;AAAA,MAAC;AAACC,IAAAA;AAAD,GAAD;AAAA,SAAgBC,IAAI,IAAI,MAAMC,MAAN,IAAgB;AAChD,QAAGA,MAAM,CAACC,IAAP,KAAgBN,OAAO,CAACO,YAAR,CAAqBD,IAAxC,EAA6C;AACzC,aAAOF,IAAI,CAACC,MAAD,CAAX;AACH;;AACDD,IAAAA,IAAI,CAACC,MAAD,CAAJ;AACA,UAAM;AAACG,MAAAA,GAAD;AAAMC,MAAAA,MAAN;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA,OAAzB;AAAkCC,MAAAA,IAAlC;AAAwCC,MAAAA;AAAxC,QAAmDR,MAAM,CAACS,OAAhE;AACAD,IAAAA,OAAO,IAAIV,QAAQ,CAACF,YAAY,EAAb,CAAnB;;AACA,QAAG;AACC,YAAMc,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,OAAN,CAAc;AACjCC,QAAAA,OAAO,EAAE,2BADwB;AAEjCT,QAAAA,GAFiC;AAGjCC,QAAAA,MAHiC;AAIjCG,QAAAA;AAJiC,OAAd,CAAvB;AAMAT,MAAAA,QAAQ,CAACH,OAAO,CAACkB,cAAR,CAAuBH,QAAQ,CAACH,IAAhC,CAAD,CAAR;AACAF,MAAAA,SAAS,IAAIP,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEI,SAAP;AAAkBI,QAAAA,OAAO,EAAEC,QAAQ,CAACH;AAApC,OAAD,CAArB;AACH,KATD,CASE,OAAMO,KAAN,EAAY;AACVhB,MAAAA,QAAQ,CAACH,OAAO,CAACoB,aAAR,CAAsBD,KAAtB,CAAD,CAAR;AACAR,MAAAA,OAAO,IAAIR,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEN,OAAO,CAACoB,aAAf;AAA8BN,QAAAA,OAAO,EAAEK;AAAvC,OAAD,CAAnB;AACH;AACJ,GApBW;AAAA,CAAZ;;AAsBA,eAAejB,GAAf","sourcesContent":["import axios from 'axios';\nimport * as actions from \"../api\";\nimport { bugRequested } from '../bugs';\n\nconst api = ({dispatch}) => next => async action => {\n    if(action.type !== actions.apiCallBegan.type){\n        return next(action)\n    }\n    next(action);\n    const {url, method, onSuccess, onError, data, onStart} = action.payload;\n    onStart && dispatch(bugRequested());\n    try{\n        const response = await axios.request({\n            baseURL: 'http://localhost:5000/api',\n            url,\n            method,\n            data\n        });\n        dispatch(actions.apiCallSuccess(response.data));\n        onSuccess && dispatch({type: onSuccess, payload: response.data});\n    } catch(error){\n        dispatch(actions.apiCallFailed(error));\n        onError && dispatch({type: actions.apiCallFailed, payload: error});\n    }\n}\n\nexport default api;"]},"metadata":{},"sourceType":"module"}