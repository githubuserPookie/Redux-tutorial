{"ast":null,"code":"var _jsxFileName = \"/home/adesbarat000/redux-test/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport configureStore from './store/configureStore'; // import { configureStore } from '@reduxjs/toolkit';\n\nimport { projectAdded } from './store/projects';\nimport { bugAdded, bugResolved, getUnresolvedBugs } from './store/bugs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore();\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nstore.dispatch(projectAdded({\n  name: \"Project 1\"\n}));\nstore.dispatch(bugAdded({\n  description: \"Bug 1\"\n}));\nstore.dispatch(bugAdded({\n  description: \"Bug 2\"\n}));\nstore.dispatch(bugAdded({\n  description: \"Bug 3\"\n}));\nstore.dispatch(bugResolved({\n  id: 2\n}));\nstore.dispatch((dispatch, getState) => {\n  store.dispatch({\n    type: \"bugsReceived\",\n    bugs: [1, 2, 3]\n  });\n});\nstore.dispatch({\n  type: \"error\",\n  payload: {\n    message: \"Toast err KEKW\"\n  }\n});\nstore.dispatch({\n  type: 'apiCallBegan',\n  payload: {\n    url: '/bugs',\n    onSuccess: 'bugReceived',\n    onError: 'apiRequestFailed'\n  }\n}); // const y = getUnresolvedBugs(store.getState());\n// console.log(y);","map":{"version":3,"sources":["/home/adesbarat000/redux-test/client/src/index.js"],"names":["React","ReactDOM","App","configureStore","projectAdded","bugAdded","bugResolved","getUnresolvedBugs","store","render","document","getElementById","dispatch","name","description","id","getState","type","bugs","payload","message","url","onSuccess","onError"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,cAAP,MAA2B,wBAA3B,C,CACA;;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,iBAAhC,QAAyD,cAAzD;;AAEA,MAAMC,KAAK,GAAGL,cAAc,EAA5B;AAEAF,QAAQ,CAACQ,MAAT,eACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAKAH,KAAK,CAACI,QAAN,CAAeR,YAAY,CAAC;AAACS,EAAAA,IAAI,EAAE;AAAP,CAAD,CAA3B;AAEAL,KAAK,CAACI,QAAN,CAAeP,QAAQ,CAAC;AAACS,EAAAA,WAAW,EAAE;AAAd,CAAD,CAAvB;AACAN,KAAK,CAACI,QAAN,CAAeP,QAAQ,CAAC;AAACS,EAAAA,WAAW,EAAE;AAAd,CAAD,CAAvB;AACAN,KAAK,CAACI,QAAN,CAAeP,QAAQ,CAAC;AAACS,EAAAA,WAAW,EAAE;AAAd,CAAD,CAAvB;AAEAN,KAAK,CAACI,QAAN,CAAeN,WAAW,CAAC;AAACS,EAAAA,EAAE,EAAE;AAAL,CAAD,CAA1B;AAEAP,KAAK,CAACI,QAAN,CAAe,CAACA,QAAD,EAAWI,QAAX,KAAwB;AACrCR,EAAAA,KAAK,CAACI,QAAN,CAAe;AAACK,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAA7B,GAAf;AACD,CAFD;AAIAV,KAAK,CAACI,QAAN,CAAe;AAACK,EAAAA,IAAI,EAAE,OAAP;AAAgBE,EAAAA,OAAO,EAAE;AAACC,IAAAA,OAAO,EAAE;AAAV;AAAzB,CAAf;AAEAZ,KAAK,CAACI,QAAN,CAAe;AACbK,EAAAA,IAAI,EAAE,cADO;AAEbE,EAAAA,OAAO,EAAE;AACPE,IAAAA,GAAG,EAAE,OADE;AAEPC,IAAAA,SAAS,EAAE,aAFJ;AAGPC,IAAAA,OAAO,EAAE;AAHF;AAFI,CAAf,E,CAQA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport configureStore from './store/configureStore';\n// import { configureStore } from '@reduxjs/toolkit';\nimport { projectAdded } from './store/projects';\nimport { bugAdded, bugResolved, getUnresolvedBugs } from './store/bugs';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nstore.dispatch(projectAdded({name: \"Project 1\"}));\n\nstore.dispatch(bugAdded({description: \"Bug 1\"}));\nstore.dispatch(bugAdded({description: \"Bug 2\"}));\nstore.dispatch(bugAdded({description: \"Bug 3\"}));\n\nstore.dispatch(bugResolved({id: 2}));\n\nstore.dispatch((dispatch, getState) => {\n  store.dispatch({type: \"bugsReceived\", bugs: [1, 2, 3]})\n})\n\nstore.dispatch({type: \"error\", payload: {message: \"Toast err KEKW\"}})\n\nstore.dispatch({\n  type: 'apiCallBegan',\n  payload: {\n    url: '/bugs',\n    onSuccess: 'bugReceived',\n    onError: 'apiRequestFailed'\n  }\n})\n// const y = getUnresolvedBugs(store.getState());\n// console.log(y);"]},"metadata":{},"sourceType":"module"}